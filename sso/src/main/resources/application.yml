server:
  port: 8001

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 185405999886-qmagrafp3qok5kte14gq7sb14c0llpbi.apps.googleusercontent.com
            client-secret: <GOOGLE_CLIENT_SECRET>
            scope:
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: userTopicId
      auto-offset-reset: latest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        max.poll.records: 500
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      linger-ms: 10
      batch-size: 16384
      properties:
        enable.idempotence: true
    listener:
      concurrency: 3
      ack-mode: manual
    template:
      user-topic: saveUserTopic
      default-topic: saveUserTopic

  application:
    name: sso-service
    security:
      jwt:
        secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
        expiration: 86400000 # a day
        refresh-token:
          expiration: 604800000 # 7 days

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  data:
    redis:
      host: localhost
      port: 6380
  cloud:
    discovery:
      enabled: true
  datasource:
    url: jdbc:postgresql://localhost:5430/sso_service
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  main:
    allow-circular-references: true


eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka
  instance:
    prefer-ip-address: true
    hostname: localhost

